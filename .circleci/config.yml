version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    docker: # run the steps with Docker
#      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run

    working_directory: ~/repo # directory where steps will run

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache:
          # when lock file changes, use increasingly general patterns to restore cache
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-

      - run: gradle dependencies # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.gradle
          key: gradle-repo-v1-{{ .Branch }}-{{ checksum "dependencies.lockfile" }}

      - run: ./gradlew clean test jacocoTestReport

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

      - run:
          name: Send to CodeCov
          command: bash <(curl -s https://codecov.io/bash)
